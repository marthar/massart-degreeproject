{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["initialState","detail","entries","search","view","viewReducer","state","action","type","value","processEntries","data","map","entry","idx","thumb","poster","split","slugs","youtube","length","name","startTime","parse","Date","key","id","toLowerCase","first_name","last_name","abstract","time","room","title","start_time","sortBy","GalleryDetail","useParams","find","useEffect","window","scrollTo","Fragment","to","className","src","target","href","item","frameBorder","allow","allowFullScreen","GalleryItem","TimeView","groupedEntries","groupBy","toString","times","uniqBy","runSearch","q","filter","includes","App","useReducer","dispatch","Tabletop","init","simpleSheet","then","tabletop","exact","path","placeholder","onChange","e","currentTarget","width","height","onClick","index","children","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01bc72cd.chunk.js","sourcesContent":["import './App.css';\n\nimport React, { useReducer, useRef, useEffect, useLayoutEffect, useCallback, forwardRef } from \"react\"\nimport PropTypes from 'prop-types';\n\nimport Tabletop from \"tabletop\"\n\nimport { map, keys, find, filter, sortBy, groupBy, uniqBy } from \"lodash\"\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport {\n  parse\n} from \"date-fns\"\n\n\nconst initialState = {\n  detail: null,\n  entries: [],\n  search: \"\",\n  view: \"posters\"\n}\n\nconst viewReducer = (state, action) => {\n  switch(action.type) { \n    case \"ENTRIES\":\n      return { ...state, entries: action.entries }\n    case \"SEARCH\":\n      return { ...state, search: action.value }\n    case \"VIEW\":\n      return { ...state, view: action.value }\n    default:\n      return state;\n\n  }\n}\n\nfunction processEntries(data) {\n   let entries = map(data, (entry,idx) => { \n\n     let thumb = entry[\"Poster Thumbnail\"];\n     let poster = entry[\"Poster Full Size\"];\n\n     thumb = thumb.split(\"=\")[1]\n     poster = poster.split(\"=\")[1]\n\n     thumb = \"https://drive.google.com/uc?export=download&id=\" + thumb;\n     poster = \"https://drive.google.com/uc?export=download&id=\" + poster;\n\n     let slugs = (entry[\"YouTube Link\"]||\"\").split(\"/\")\n     let youtube = slugs[slugs.length-1]\n\n     const name = `${entry['First Name']} ${entry['Last Name']}`;\n\n     let startTime = (entry[\"Time\"]||\"\").split(\"â€“\")[0];\n     startTime = parse(startTime,'h:mma', new Date())\n\n     return {\n       key: idx,\n       id: entry['Last Name'].toLowerCase(),\n       thumb: thumb,\n       poster: poster,\n       first_name: entry['First Name'],\n       last_name: entry['Last Name'],\n       name: name,\n       search: name.toLowerCase(),\n       abstract: entry[\"Abstract\"],\n       time: entry[\"Time\"],\n       room: entry[\"Room Link\"],\n       youtube: youtube,\n       title: entry[\"Title\"],\n       start_time: startTime\n     }\n   })\n   return sortBy(entries, (entry) => `${entry.last_name.toLowerCase()}-${entry.first_name.toLowerCase()}`);\n}\n\nfunction GalleryDetail({entries}) {\n  let { id } = useParams();\n  let entry= find(entries, (entry) => entry.id == id.toLowerCase())\n\n\n\n  useEffect(() => {\n    window.scrollTo(0,0)\n  },[])\n\n  if(!entry) {\n    return <React.Fragment/>\n  }\n\n  return <React.Fragment>\n         <header>\n        <Link to=\"/\"> <h3 className=\"back\"><div>&laquo;</div> Online Symposium May 12th 2020</h3></Link>\n        <h1>{entry.title}</h1>\n        <h2>{entry.name}</h2>\n        </header>\n      \n        <section className=\"work\">\n            <div className='work-image'><img src={entry.poster} /></div>\n            <div className=\"time-block\">\n              <h2>{entry.time}</h2>\n              <a target=\"_blank\"  href={entry.room}><h2 className=\"button\">Join Event</h2></a>\n            </div>\n            {entry.abstract.split('\\n\\n').map((item, key) => {\n              return <p key={key}>{item}</p>\n            })}\n            <div className=\"video\">\n              <iframe src={`https://www.youtube.com/embed/${entry.youtube}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n            </div>  \n             <div className=\"time-block\">\n              <h2>{entry.time}</h2>\n              <a target=\"_blank\"  href={entry.room}><h2 className=\"button\">Join Event</h2></a>\n            </div>\n        </section>\n        </React.Fragment>;\n}\n\nfunction GalleryItem({entry}) {\n  return  <Link key={entry.key} to={`/${entry.id}`}>\n              <div className=\"piece\" >\n                <div className='piece-image'><img src={entry.thumb} /></div>  \n                <h1>{entry.title}</h1>\n                <h2>{entry.name}</h2>\n              </div>\n           </Link>;\n}\n\n\nfunction TimeView({entries}) {\n   const groupedEntries = groupBy(entries, (entry) => entry.start_time.toString())\n\n   let times = map(entries, (entry) => [ entry.start_time, entry.time ] );\n   times = uniqBy(times, (time) => time[0].toString())\n   times = sortBy(times, (time) => time[0])\n\n   return <div className=\"times\">\n     { map(times, (time) => {\n       return <div key={time[0]} className=\"time\">\n         <div className=\"time--time\">{time[1]}</div>\n         <div className=\"time--names\">\n           {map(groupedEntries[time[0].toString()], (entry) => <div key={entry.key} className=\"time--name\"><Link to={`/${entry.id}`}>{entry.name}</Link></div>)}\n         </div>\n       </div>; \n     }) }\n   </div>\n}\n\n\nfunction runSearch(entries, search) {\n  let q = search.toLowerCase()\n  return filter(entries, (entry) => {\n    return entry.search.includes(q)\n  })\n}\n\n\nfunction App() {\n  const [\n    {\n      detail,\n      entries,\n      search,\n      view\n    },\n    dispatch\n  ] = useReducer(viewReducer, initialState)\n\n\n  useEffect(() => { \n    Tabletop.init( {\n      key: 'https://docs.google.com/spreadsheets/d/1lzAodBh1ohPURnCNYbx-CgA00TEzRFi4G4qE7_Z3UX0/edit?usp=sharing',\n      simpleSheet: true }\n    ).then(function(data, tabletop) { \n      dispatch({ type: \"ENTRIES\", entries: processEntries(data) })\n   }) }, []);\n\n\n\n  return (\n    <Router>\n    <div>\n    <Switch>\n          <Route exact path=\"/\">\n            <header>\n              <h3>Online Symposium May 12th 2020</h3>\n              <h1>Degree Project <br/>Symposium</h1>\n              <h2>MassArt Communication Design</h2>  \n              <section id='search'>\n                <input type='name' className=\"search\" value={search} placeholder=\"search\" onChange={(e)=>dispatch({type:\"SEARCH\", value:e.currentTarget.value}) }/>\n                <img className='search-icon' src='./search.svg' width='15' height='15' />\n              </section>\n              <div className=\"view\">\n                <button className={`view-button ${view == 'posters' && \"view-button--active\"}`} onClick={() => dispatch({type:\"VIEW\",value:\"posters\"}) }>Posters</button>\n                <button className={`view-button ${view == 'times' && \"view-button--active\"}`} onClick={() => dispatch({type:\"VIEW\",value:\"times\"}) }>Times</button>\n              </div>\n            </header>\n            \n            { view == 'posters' && <section id=\"gallery\">\n              {map(runSearch(entries,search), (entry,index) => <GalleryItem entry={entry} key={index} />) }\n            </section> }\n            { view == 'times' && <section id='time'>\n              <TimeView entries={runSearch(entries,search)} />\n              </section>}\n          </Route>\n          <Route path=\"/:id\" children={<GalleryDetail entries={entries} />} />\n        </Switch>\n      <footer>\n        <h3><img src=\"./light-logo.png\" />621 Huntington Avenue, Boston, MA, 02115 | 617.879.7000 | &copy; 2020  | <a href=\"mailto:merettig@massart.edu?Subject=Degree%20Symposium\" target=\"_top\"> Contact Us</a></h3>\n      </footer>\n     </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}